# Security Settings

##
## Authentication
##

# Path to JAAS configuration file
# When located inside a plugin, use
#  "platform:/plugin/name.of.plugin/path/within/plugin.conf"
jaas_config_file=platform:/plugin/org.csstudio.security/jaas.conf

# Name of a JAAS login configuration to use.
# This must match the name of one of the entries
# in the jaas_config_file.
jaas_config_name=SNS_UCAMS


##
## Authorization
##

# Select authorization provider
#
# Standard implementations:
# FileBased, see org.csstudio.security.authorization.FileBasedAuthorizationProvider
# LDAPGroup, see org.csstudio.security.authorization.LDAPGroupAuthorizationProvider
# Script, see org.csstudio.security.authorization.ScriptAuthorizationProvider
#
# Additional providers can be added via extension point,
# see org.csstudio.security.authorization.AuthorizationProvider
authorization_provider=FileBased

# Path to FileBased authorization configuration file
authorization_file_name=platform:/plugin/org.csstudio.security/authorization.conf

# Path to command used by Script authorization
authorization_script_name=/usr/local/bin/id_auth


##
## Secure Preferences
##

# Where secure preferences are located.
#
# "Default":
# Use the default location, which is typically
# the user's home directory.
#  @see SecurePreferencesFactory#getDefault()
#  
# Advantage: It's the default
# Disadvantage: You won't always know where the preferences are.
#
# "Instance":
# Use the Eclipse 'instance', i.e. the workspace.
# 
# Advantage: You know where it is, and each workspace
# will have its own settings.
# Disadvantage: Each workspace has different settings.
#
# "Install":
# Use the Eclipse 'install' location, i.e. where the product is installed.
# 
# Advantage: You know where it is, and every workspace for that
# product will have the same settings. Good for a "global" setup.
# Disadvantage: Ordinary users cannot (should not) have write permissions.
secure_preference_location=Default
