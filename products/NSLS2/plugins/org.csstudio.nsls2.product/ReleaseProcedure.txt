NSLS-II Product Release Procedure
------------------------------------------------------------

Pre-release
* Make sure all the dependencies were released (if possible)
* Change version number in splash screen
* Change version number in about
* Change version number in product.xml
* Change version number in the product plugin.xml
* Ensure COMMON CORE and NSLS2 builds succeed

Release
* Binaries are build during the product build
* tag repository with tag NSLS2_${version}
* copy the jenkins@irmis-dev:/home/jenkins/.jenkins/CSS-NSLSII/build/build/BuildDirectory/I.CSS-NSLSII/*.zip to sf-shell /home/project-web/cs-studio/htdocs/nsls2
* repackage the products with the appropriate version number cp -r CSS-NSLSII-*.zip CSS-NSLSII-linux-*-${version}.zip
  e.g cp -r CSS-NSLSII-linux.gtk.x86.zip CSS-NSLSII-linux-3.1.0.zip
* update the soft link to point to the new release
* update the css nsls2 released repository
check if the product/NSLS2/category.xml files has features listed with correct version numbers.
the p2 repository is created as part of the build process, mirror this repository into the released repository on sourceforge.
java -jar ../.jenkins/CSS-NSLSII/build/ext/eclipse/plugins/org.eclipse.equinox.launcher_1.2.*.jar -application org.eclipse.equinox.p2.artifact.repository.mirrorApplication -verbose -source http://cs-studio.sourceforge.net/nsls2/updates -destination nsls2Repository/
java -jar ../.jenkins/CSS-NSLSII/build/ext/eclipse/plugins/org.eclipse.equinox.launcher_1.2.*.jar -application org.eclipse.equinox.p2.metadata.repository.mirrorApplication -verbose -source http://cs-studio.sourceforge.net/nsls2/updates -destination nsls2Repository/
scp -r nsls2Repository/* shroffk,cs-studio@web.sourceforge.net:htdocs/nsls2/updates (create a backup before replacing the existing repository)