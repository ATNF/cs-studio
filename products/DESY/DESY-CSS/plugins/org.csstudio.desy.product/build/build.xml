<project name="css.hudson.build" default="build">
	<property file="build.properties" />
	<property file="tools.properties" />
	

	<!-- target name="build" depends="init, buckminster-import, pde-build, update-configuration, test, hudsonupdate"/-->
	<target name="build" depends="tmp"/>
	
	<echo message="'workspaceLocation: ${workspaceLocation}"/>
	<echo message="'buildDirectory: ${buildDirectory}"/>
	<echo message="'hudsonbase: ${hudsonbase}"/>
	<echo message="'hudsonjob: ${hudsonjob}"/>
	<echo message="'BaseLocation: ${baseLocation}"/>
	<echo message="'buckminsterLocation: ${buckminsterLocation}"/>
	<echo message="'buckminsterVersion: ${buckminsterEquinoxLauncherPluginVersion}"/>
	<echo message="'buckminsterCquery: ${buckminsterCquery}"/>

	<!--
	TMP target for simple build without tests and buckminster 
	-->
	<target name="tmp">

		<copy todir="${workspaceLocation}/build">
			<fileset dir="${workspaceLocation}/core"/>
		</copy>
		
		<java classname="org.eclipse.equinox.launcher.Main" fork="true" failonerror="true">			
			<arg value="-application" />
			<arg value="org.eclipse.ant.core.antRunner" />
			<arg value="-buildfile" />
			<arg value="${base}/productBuild.xml" />
			<arg value="-DbaseLocation=${e360TP}" />
			<!--arg value="-Dtimestamp=${tstamp}" /-->
			<classpath>
				<pathelement location="${e360TP}/plugins/org.eclipse.equinox.launcher_1.1.0.v20100507.jar" />
			</classpath>
		</java>
	</target>
	<!-- 
		Delete & Create Directorys
	 -->
	<target name="init">
		<delete dir="${buildDirectory}" />
		<mkdir dir="${buildDirectory}" />
		<mkdir dir="${buildDirectory}/plugins" />
		<mkdir dir="${buildDirectory}/features" />
		<delete dir="${testDirectory}" />
		<mkdir dir="${testDirectory}" />
		<mkdir dir="${testResultsDirectory}" />
		<delete dir="${hudsonbase}/home/jobs/${hudsonjob}/workspace/artefacts"/>
		<mkdir dir="${hudsonbase}/home/jobs/${hudsonjob}/workspace/artefacts" />
	</target>

	<target name="preparebuckminster">
		<delete file="urlreader.rmap"/>
		<copy file="template.rmap" tofile="urlreader.rmap"/>
		<replace file="urlreader.rmap" token="@workspace@" value="${hudsonbase}/home/jobs/${hudsonjob}/workspace"/>
	</target>
	
	<!-- 
		Set Targetplatform in Buckminster / Resolve & Materialize $buckcquery
	 -->
	<target name="buckminster-import" depends="preparebuckminster">
		<java classname="org.eclipse.equinox.launcher.Main" fork="true" failonerror="true">
			<arg value="-data"/>
			<arg value="${buildDirectory}"/>
			<arg value="setpreference"/>
			<arg value="&quot;org.eclipse.buckminster.pde.targetPlatformPath=${baseLocation}&quot;"/>
			<classpath>
				<pathelement location="${buckminsterLocation}/plugins/org.eclipse.equinox.launcher_${buckminsterEquinoxLauncherPluginVersion}.jar" />
			</classpath>
		</java>
		<java classname="org.eclipse.equinox.launcher.Main" fork="true" failonerror="true">
			<arg value="-data"/>
			<arg value="${buildDirectory}"/>
			<arg value="import"/>
			<arg value="${buckminsterCquery}"/>
			<jvmarg value="-Xmx512m"/>
			<classpath>
				<pathelement location="${buckminsterLocation}/plugins/org.eclipse.equinox.launcher_${buckminsterEquinoxLauncherPluginVersion}.jar" />
			</classpath>
		</java>
	</target>


	<!--
		PDE Build
	-->
	<target name="pde-build">
		<java classname="org.eclipse.equinox.launcher.Main" fork="true" failonerror="true">			
			<arg value="-application" />
			<arg value="org.eclipse.ant.core.antRunner" />
			<arg value="-buildfile" />
			<arg value="${base}/productBuild.xml" />
			<arg value="-DbaseLocation=${baseLocation}" />
			<arg value="-Dtimestamp=${tstamp}" />
			<classpath>
				<pathelement location="${eclipseLocation}/plugins/org.eclipse.equinox.launcher_${equinoxLauncherPluginVersion}.jar" />
			</classpath>
		</java>
	</target>
	

	<!-- 
		Set Property "buildfile.present"
	-->
	<target name="check-build-file">
		<available file="${buildDirectory}/${buildLabel}/${buildId}-win32.win32.x86.zip" property="buildfile.present" value="true"/>
	</target>

	
	<target name="update-configuration" depends="check-build-file" if="buildfile.present">
		<mkdir dir="${buildDirectory}/initmp/${archivePrefix}" />
		<move todir="${buildDirectory}/initmp/${archivePrefix}">
			<fileset file="${buildDirectory}/plugins/org.csstudio.desy.product/plugin_customization.ini"/>
		</move>
				<mkdir dir="${buildDirectory}/initmp/${archivePrefix}/MP3Files" />
		<move todir="${buildDirectory}/initmp/${archivePrefix}/MP3Files">
			<fileset dir="${buildDirectory}/plugins/org.csstudio.desy.product/MP3Files"/>
		</move>
		<zip destfile="${buildDirectory}/${buildLabel}/${buildId}-win32.win32.x86.zip" basedir="${buildDirectory}/initmp" update="true" />
	</target>
		

	<!--
		Create Test Environment (extract Eclipse & Eclipse Test Framework & Eclipse Test Framework Junit 4 Patch)
                & copy Plug-ins from CSS Zip to extracted Eclipse Folder
	-->
	<target name="preparetest" depends="check-build-file" if="buildfile.present">
		<unzip src="${eclipsezip}" dest="${testDirectory}"/>
		
		<unzip src="${etfzip}" dest="${testDirectory}"/>

		<unzip src="${etfjunitpatch}" dest="${testDirectory}"/>

		<unzip src="${buildDirectory}/${buildLabel}/${buildId}-win32.win32.x86.zip" dest="${testDirectory}"/>

		<move todir="${testDirectory}/eclipse">
			<fileset dir="${testDirectory}/${archivePrefix}">
				<include name="plugins/**" />
				<include name="features/**" />
			</fileset>
		</move>
	</target>
	

	<!--
		Run the test with ETF (using library.xml targets)
	-->
	<target name="test" depends="preparetest" if="buildfile.present">
		<!-- 
			Run the test.
		-->
		<property name="library-file" value="${testDirectory}/eclipse/plugins/org.eclipse.test_3.2.0/library.xml"/>
		<property name="eclipse-home" value="${testDirectory}/eclipse"/>
		<ant target="${testtarget}" antfile="${library-file}" dir="${eclipse-home}">
			<property name="os" value="${os}"/>
			<property name="ws" value="${ws}"/>
			<property name="arch" value="${arch}"/>
			<property name="data-dir" value="${eclipse-home}/junit-workspace -clean" />
			<property name="plugin-name" value="${testPlugin}" />
			<property name="classname" value="${testClassname}" />
		</ant>
		
		<junitreport todir="${testResultsDirectory}">
			<fileset dir="${testDirectory}/eclipse">
				<include name="*Suite.xml"/>
				<include name="*AllTests.xml"/>
				<include name="*Test.xml"/>
			</fileset>
		</junitreport>
	</target>
	
	<target name="hudsonupdate">
		<copy file="${buildDirectory}/${buildLabel}/${buildId}-win32.win32.x86.zip" todir="${hudsonbase}/home/jobs/${hudsonjob}/workspace/artefacts"/>
		<copy file="${testResultsDirectory}/TESTS-TestSuites.xml" todir="${hudsonbase}/home/jobs/${hudsonjob}/workspace/artefacts"/>
	</target>
</project>