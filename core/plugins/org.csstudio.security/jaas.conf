/** JAAS Configuration file example
 *
 *  This is the default JAAS configuration file.
 *
 *  To use a different file, copy this file, edit as needed,
 *  then define the Eclipse preference
 *
 *   org.csstudio.security/jaas_config_file=/path/to/your/file
 *
 * to specify the file, combined with the Eclipse preference
 *
 *   org.csstudio.security/jaas_config_name=Local_LDAP
 *
 * so select one of the login configurations specified in your file.
 */ 


/** The following two entries need to be present
 *  to support automatic login based on the current user.
 *  See LoginJob.forCurrentUser()
 */

/* Use the currently logged-in user on Linux and Mac OS X */
unix
{
    com.sun.security.auth.module.UnixLoginModule required
    debug="true";
};


/* Use the currently logged-in user on Windows */
windows
{
    com.sun.security.auth.module.NTLoginModule required
    debug="true";
};


/* Use plain-text password file.

 * The passwordFile as listed in here works for
 * plain JUnit tests.
 
 * In the real world, it has to be the full path
 * to the file, which should probably be located
 * in for example /usr/local/etc.
 * But then again in the real world you should not
 * use such a plain-text password file anyway...
 */
file
{
    com.sun.jmx.remote.security.FileLoginModule required
    debug="true"
    passwordFile="passwords.conf";
};


/* LDAP authentication.
 * Example of using LDAP on 'localhost' and some root DN.
 *
 * Refer to javadoc of com.sun.security.auth.module.JndiLoginModule
 * for full details.
 * The user URL must point to entries in the LDAP "inetOrgPerson" schema
 * with "uid" and "userPassword" attributes.
 * The provided user name must match a "uid",
 * and the password must match the "{crypt}..." version of "userPassword".
 */ 
Local_LDAP
{
    com.sun.security.auth.module.JndiLoginModule required
    debug=true
    user.provider.url="ldap://localhost:389/ou=People,dc=test,dc=ics"
    group.provider.url="ldap://localhost:389/ou=People,dc=test,dc=ics";
};



/* Authentication via LDAP 'bind' as used by SNS UCAMS
 *
 * Works in JUnit tests, but not under Eclipse runtime.
 * For that, see following entry.
 */
Plain_JAAS_SNS_UCAMS
{
    org.csstudio.security.authentication.LDAPBindLoginModule required
    debug=true
    user.provider.url="ldaps://skynet2.ornl.gov/ou=Users,dc=ornl,dc=gov"
    user.dn.format="uid={0},ou=Users,dc=ornl,dc=gov";
};


/* Authentication via LDAP 'bind' as used by SNS UCAMS
 *
 * Fundamentally, this uses
 *    org.csstudio.security.authentication.LDAPBindLoginModule
 * but that class would not be accessible by JAAS.
 * The Eclipse extension point 
 *    org.eclipse.equinox.security.loginModule
 * registers it as "org.csstudio.security.ldapBind",
 * and JAAS will then use it via the Eclipse ExtensionLoginModule.
 */
SNS_UCAMS
{
    /* Get LDAPBindLoginModule via Eclipse */
    org.eclipse.equinox.security.auth.module.ExtensionLoginModule required
    extensionId=org.csstudio.security.ldapBind
    
    /* Parameters for LDAPBindLoginModule */
    debug=true
    user.provider.url="ldaps://skynet2.ornl.gov/ou=Users,dc=ornl,dc=gov"
    user.dn.format="uid={0},ou=Users,dc=ornl,dc=gov";
};
